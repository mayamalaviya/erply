openapi: 3.0.0
info:
  title: 'Product Api'
  description: 'This project is an exmaple of a small API written in PHP'
  version: '1'
servers:
  -
    url: 'http://localhost:8081/api/v1'
    description: 'Api server'
paths:
  /:
    get:
      summary: 'Welcome message'
      responses:
        '200':
          description: success
  /products:
    get:
      summary: 'Request all products'
      description: 'Returns all products'
      operationId: getProducts
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: 'Products not found'
    post:
      summary: 'Add a new product'
      operationId: addProduct
      requestBody:
        description: 'Product object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '405':
          description: 'Invalid input'
        '200':
          description: success
          content:
            application/json:
              schema: {  }
  '/products/{id}':
    get:
      summary: 'Find product by ID'
      description: 'Returns a single product'
      operationId: getProductById
      parameters:
        -
          name: id
          in: path
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Product not found'
    post:
      summary: 'Update an existing product'
      operationId: updateProduct
      parameters:
        -
          name: id
          in: path
          description: 'ID of the product that needs to be updated'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: false
      responses:
        '200':
          description: success
        '404':
          description: 'Product not found'
        '405':
          description: 'Invalid input'
  '/products/search/{name}':
    get:
      summary: 'Find product by name'
      description: 'Returns one or more products'
      operationId: getProductByName
      parameters:
        -
          name: name
          in: path
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: 'Invalid name supplied'
        '404':
          description: 'Product not found'
  'products/{id}':
    delete:
      summary: 'Delete a product'
      operationId: deleteProduct
      parameters:
        -
          name: id
          in: path
          description: 'Product ID to delete'
          required: true
      responses:
        '200':
          description: success
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Product not found'
components:
  schemas:
    Product:
      title: 'Product model'
      description: 'Product model'
      required:
        - name
        - price
      properties:
        name:
          title: 'Product name'
          description: 'Product name'
        price:
          title: 'Product price'
          description: 'Product price'
      type: object
